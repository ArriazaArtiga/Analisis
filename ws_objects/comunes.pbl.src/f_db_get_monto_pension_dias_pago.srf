$PBExportHeader$f_db_get_monto_pension_dias_pago.srf
global type f_db_get_monto_pension_dias_pago from function_object
end type

forward prototypes
global function decimal f_db_get_monto_pension_dias_pago (string as_dpi, decimal adc_pension)
end prototypes

global function decimal f_db_get_monto_pension_dias_pago (string as_dpi, decimal adc_pension);integer li_dia, li_mes, li_anio, li_dias
datetime ldt_fecha_resolucion, ldt_fecha_fin_mes
string ls_fecha
decimal ldc_pension, ldc_monto

Select Fecha_Resolucion 
into :ldt_fecha_resolucion
from Solicitudes
where DPI = :as_dpi
using SQLCA;

li_mes = month(date(ldt_fecha_resolucion))
li_anio = year(date(ldt_fecha_resolucion))

if li_mes = 1 or li_mes = 3 or li_mes = 5 or li_mes = 7 or li_mes = 8 or li_mes = 10 or li_mes = 12 then
	li_dia = 31
else
	if li_mes = 4 or li_mes = 6 or li_mes = 9 or li_mes = 11 then
		li_dia = 30
	else
		if mod(li_anio, 400) = 0 then
			li_dia = 29
		else
			if mod(li_anio, 4) = 0 and mod(li_anio, 100) <> 0 then
				li_dia = 29
			else
				li_dia = 28
			end if
		end if
	end if
end if

ls_fecha = string(li_dia)+'/'+string(li_mes)+'/'+string(li_anio)
ldt_fecha_fin_mes = datetime(ls_fecha)

Select DATEDIFF(dd,Fecha_Resolucion, :ldt_fecha_fin_mes)
into :li_dias
from Solicitudes
where DPI = :as_dpi
using SQLCA;

//ldc_pension = f_db_get_pension_calculada_contribuyente(as_dpi)

ldc_monto = (adc_pension / li_dia) * li_dias


return ldc_monto
end function

